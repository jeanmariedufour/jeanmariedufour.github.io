%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: m:\Tt\Dufour_1998_C_AdvEtx_Exercices6_TestingGeneral_F.dvi
%%CreationDate: Sat Jan 19 13:50:26 2002
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Times-Roman Times-Bold Times-Italic
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: M:\TEX\texmf\miktex\bin\dvips.exe -O -0in,0.5in
%+ m:\Tt\Dufour_1998_C_AdvEtx_Exercices6_TestingGeneral_F
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.01.19:1350
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600
(m:\Tt\Dufour_1998_C_AdvEtx_Exercices6_TestingGeneral_F.dvi)
@start
%DVIPSBitmapFont: Fa msbm10 12 1
/Fa 1 83 df<007FB712C0B812FCEFFF806C17E02800F807F00F13F8DBC00113FE017890
398000FCFF94387C3F8094383E0FC0727E94381E03F0EF1F011800717FA21978A519F8A2
4D5B1801EF1E034E5A94383E0FC094387E3F80DDFDFFC7FC933807FFFE92B612F818E095
C8FC17F0ED87C1EEC0F8923883E0FC177C923881F03EA2923880F81F84EE7C0F717E163E
93383F03E0041F7FEE0F81EF80F8EE07C0187C933803E07E183E706C7E85706C6C7E1807
94387C03E0057E7F94383E01F8716C7E197C01F86D6D6C7EF13F80007FB66C6CB512E0B7
00C015F0836C4B6C14E044447EC33D>82 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmsy10 12 3
/Fb 3 51 df<19E0F003F0180FF03FE0F0FF80943803FE00EF0FF8EF3FE0EFFF80DC03FE
C7FCEE0FF8EE3FE0EEFF80DB03FEC8FCED1FF8ED7FE0913801FF80DA07FEC9FCEC1FF0EC
7FC04948CAFCEB07FCEB1FF0EB7FC04848CBFCEA07FCEA1FF0EA7FC048CCFCA2EA7FC0EA
1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FC913801FF
809138007FE0ED1FF8ED07FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FE0EF0F
F8EF03FE943800FF80F03FE0F00FF01803F000E01900B0007FB912E0BA12F0A26C18E03C
4E78BE4D>20 D<127012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB
01FF9038007FC0EC1FF0EC07FC913801FF809138007FE0ED1FF8ED07FE923800FF80EE3F
E0EE0FF8EE03FE933800FF80EF3FE0EF0FF8EF03FE943800FF80F03FE0F00FF0A2F03FE0
F0FF80943803FE00EF0FF8EF3FE0EFFF80DC03FEC7FCEE0FF8EE3FE0EEFF80DB03FEC8FC
ED1FF8ED7FE0913801FF80DA07FEC9FCEC1FF0EC7FC04948CAFCEB07FCEB1FF0EB7FC048
48CBFCEA07FCEA1FF0EA7FC048CCFC12FC1270CDFCB0007FB912E0BA12F0A26C18E03C4E
78BE4D>I<92B6FC02071580143F91B7120001030180C8FCD907FCC9FCEB1FE0EB3F8001
7ECAFC5B485A485A485A5B485A121F90CBFC123EA2123C127CA2127812F8A25AA2B9FC18
80A2180000F0CBFCA27EA21278127CA2123C123EA27E7F120F6C7E7F6C7E6C7E6C7E137E
6D7EEB1FE0EB07FC6DB47E010090B6FC023F1580140702001500313A78B542>50
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmex10 12 1
/Fc 1 27 df<170F173F17FF1603EE0FFCEE1FF0EE7FE0EEFF804B13004B5A4B5A4B5A4B
5A4B5A4B5A15FF5E5C93C7FC5C5D14075DA3140F5DB3B3B3AE4A5AA3143F5DA24A5AA24A
5AA24990C8FC495AA2495A495A495A495A495A49C9FC485AEA07FCEA0FF0EA3FC0B4CAFC
12FCA2B4FCEA3FC0EA0FF0EA07FCEA01FE6C7EEB7FC06D7E6D7E6D7E6D7E6D7EA26D7E6D
7FA26E7EA26E7EA281141FA36E7EB3B3B3AE811407A38114038180828082157F6F7E6F7E
6F7E6F7E6F7E6F7E6F1380EE7FE0EE1FF0EE0FFCEE03FF1600173F170F30EE73834B>26
D E
%EndDVIPSBitmapFont
/Fd 22[44 44 110[44 3[50 28 39 39 50 50 50 50 72 28 2[28
50 50 28 44 50 1[50 50 16[61 1[66 31[25 33 45[{
TeXBase1Encoding ReEncodeFont}25 99.6264 /Times-Italic
rf
%DVIPSBitmapFont: Fe cmr8 8 3
/Fe 3 51 df<EB3FC0EBFFF03803E07C48487E48487E497E001EEB0780A2003E14C0A248
EB03E0A500FC14F0B0007C14E0A3007E1307003E14C0A36CEB0F806C14006D5A3807C03E
3803F0FC3800FFF0EB3FC01C2D7DAB23>48 D<130C133C137CEA03FC12FFEAFC7C1200B3
B113FE387FFFFEA2172C7AAB23>I<EB7F803801FFF0380780FC380E003F48EB1F8048EB
0FC05A0060EB07E012F000FC14F07E1403A3007C1307C7FCA215E0140F15C0141F1580EC
3F00147E147C5C495A495A495A495A011EC7FC5B5B4913305B485A4848136048C7FC000E
14E0001FB5FC5A4814C0B6FCA21C2C7DAB23>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmr12 12 13
/Ff 13 121 df<140C141C1438147014E0EB01C01303EB0780EB0F00A2131E5BA25B13F8
5B12015B1203A2485AA3485AA348C7FCA35AA2123EA2127EA4127CA312FCB3A2127CA312
7EA4123EA2123FA27EA36C7EA36C7EA36C7EA212017F12007F13787FA27F7FA2EB0780EB
03C01301EB00E014701438141C140C166476CA26>40 D<12C07E12707E7E7E120F6C7E6C
7EA26C7E6C7EA21378137C133C133E131E131FA2EB0F80A3EB07C0A3EB03E0A314F0A213
01A214F8A41300A314FCB3A214F8A31301A414F0A21303A214E0A3EB07C0A3EB0F80A3EB
1F00A2131E133E133C137C13785BA2485A485AA2485A48C7FC120E5A5A5A5A5A16647BCA
26>I<16C04B7EB3AB007FBAFCBB1280A26C1900C8D801E0C9FCB3AB6F5A41407BB84C>
43 D<14FF010713E090381F81F890383E007C01FC133F4848EB1F8049130F4848EB07C0
4848EB03E0A2000F15F0491301001F15F8A2003F15FCA390C8FC4815FEA54815FFB3A46C
15FEA56D1301003F15FCA3001F15F8A26C6CEB03F0A36C6CEB07E0000315C06D130F6C6C
EB1F806C6CEB3F00013E137C90381F81F8903807FFE0010090C7FC28447CC131>48
D<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E007FB6FCA3204278
C131>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB3A5121EEA7F80A2EAFFC0A4EA
7F80A2EA1E000A2B78AA1B>58 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB3A512
1E127FEAFF80A213C0A4127F121E1200A512011380A3120313005A1206120E120C121C5A
5A12600A3E78AA1B>I<007FBAFCBB1280A26C1900CEFCB0007FBAFCBB1280A26C190041
187BA44C>61 D<EAFFFCA4EAF000B3B3B3B3B3A2EAFFFCA40E6476CA1B>91
D<EAFFFCA4EA003CB3B3B3B3B3A2EAFFFCA40E647ECA1B>93 D<EB01FE903807FFC09038
1F03F090387E00FC49137E48487F485A4848EB1F80000F15C049130F121F484814E01507
A2007F15F090C7FCA25AA390B6FCA290C9FCA67EA27FA2123F16306C7E1670000F15606D
14E06C6C14C0000314016C6CEB03806C6CEB0700013E131E90381F80F8903803FFE00100
90C7FC242E7DAC2B>101 D<3901FC03FC00FF90380FFF8091383C07E091387001F83A07
FDE000FE00010180137F01FFEC3F8091C7EA1FC04915E049140F17F0160717F8160317FC
A3EE01FEABEE03FCA3EE07F8A217F0160F6D15E0EE1FC06D143F17806EEB7E00D9FDC05B
9039FCF003F891383C0FE091381FFF80DA03FCC7FC91C9FCAE487EB512F8A32F3F7DAB36
>112 D<B539F007FFFCA30003D9C00113C0C6496C1300017F14FC013F5C6E13E06D7E01
0F495A6D6C485A02F890C7FC903803FC060101130E6E5A903800FF186E5AEC3FF05D141F
140F6E7E81140FEC0DFCEC19FEEC38FF4A7E9138603F8002C07F0101131F49486C7E0200
7F01066D7E010E1303496D7E013C80017C80D801FC1580D80FFE4913C0B5D8800F13FFA3
302B7FAA33>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmmi8 8 4
/Fg 4 117 df<147C49B4FC903803C78090380783C090381F03E0EB1E01133E017C13F0
13F8A2EA01F0120313E01207A2EA0FC01403A2EA1F80A21407003F14E0130090B5FCA239
7F000FC0127EA2141F1580127C00FC14005CA2147EA248137C14FC00785B495AA2387C03
E0383C07C0495A001C90C7FCEA1E3EEA0FF8EA03E01C307DAE21>18
D<000FB8FCA23B1FC003F8003F0100151F001C4A130E123C003801071406123000704A13
0EA20060010F140C12E0485CA2141FC715005DA2143FA292C8FCA25CA2147EA214FEA25C
A21301A25CA21303A25CA21307A25C130F131F001FB512F0A2302D7FAC29>84
D<13F8121FA21201A25BA21203A25BA21207A25BA2120FEBC7E0EB9FF8EBB83C381FF01E
EBE01F13C09038800F80EA3F00A2123EA2007E131FA2127CA2143F00FC14005AA2147EA2
147C14FC5C387801F01303495A383C0F806C48C7FCEA0FFCEA03F0192F7DAD1E>98
D<130E131FA25BA2133EA2137EA2137CA213FCA2B512F8A23801F800A25BA21203A25BA2
1207A25BA2120FA25BA2001F1310143013001470146014E0381E01C0EB0380381F0700EA
0F0EEA07FCEA01F0152B7EA919>116 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmmi12 12 26
/Fh 26 122 df<EE03FF047F13F0923901FC01FC92390FE0007FDB3F80EB1FC003FEC76C
7EDA01F8EC03F0DA07F0814A486E7EDA1F806E7E027FC9FC02FE167F495A4948EE3F8013
07494817C04A161F495A013F18E0495AA249CAFC485A1AF012035B12075B120F5B001F01
30031813E00270ED383FD9E07FB612F0123FA291B7FC48489338E07FC0A301C1188002C0
C8EAC0FF38FF81800180CA130060A24E5AA2614E5AA2007F4D5AA24E5A4E5A61003F177F
6D4CC7FC4D5A001F5F4D5A6C6C4B5A00074C5A6DED1F806C6C4BC8FC000116FE6C6CEC01
F8017EEC07F06D6CEB1FC0D90FE0017FC9FC903903F803FC0100B512E0DA0FFECAFC4448
7CC54B>2 D<D90FF0ED0FE0D93FFEED7FF890B54A487E486E01077F486E497F486E5B48
6E491480261FC03F91387FC03F9026000FF89038FF000F003C0103D901FC130700384B48
1303486D6C485A006001004A1301484B5A4C5A037C90C7FC48033E1500C893C7FC5EA25E
A2ED7DF0A2ED7FE0A25EA35EA215FF93CAFCA45C5DA314035DA314075DA3140F5DA3141F
5DA3143F5DA3147F5DA214FFA25B5B000FB612E0A341467DC539>7
D<EC03FCEC1FFF9138FE07C0903903F001F049486C7ED91FC06D130E4948137C49C76C13
0C01FE143F4848161C48486E131800071680491638000F173048481670EFC060485A18E0
040F13C0484815C1188017C300FFEEC70090C813C617CE17DCEE1FD84816F85F5F5FA500
7E153F167F6C03EF1338ED03CF6C6CD90F0713306C6C011C14706C6C9039F803E0E03C01
F00FE001E1C026007FFFC7EAFF80D91FF0EC3E00372D7CAB3E>11
D<157E913801FF80913807C3E091381F01F0EC3E004A13F814FC4948137C495A5C010714
7E495A131F5C133F49C7127FA213FEA212015B12034914FF1207A25B000F15FE1501A248
5AA21503003F15FC5B90B6FCA24815F89038800007A2150F00FF15F090C7FCA2ED1FE0A2
5AED3FC0A21680157F16005A15FEA24A5AA25D14035D4A5A007C495AA24A5A007E49C7FC
003E133E5C001E5B6C485A380783C06CB4C8FCEA00FC28477CC52D>18
D<0203B612E0021F15F091B7FC4916E0010716C090270FF80FF8C7FC90381FC00349486C
7E017EC7FC49147E485A4848143E0007153F5B485AA2485AA2123F90C8FC5E48157E127E
A216FE00FE5D5A15015EA24B5A007C5D15074B5A5E6C4AC8FC153E6C5C5D390F8003F039
07C007C02601F03FC9FC38007FFCEB1FE0342C7DAA37>27 D<121EEA7F80A2EAFFC0A4EA
7F80A2EA1E000A0A78891B>58 D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413
E013C0A312011380120313005A1206120E5A5A5A12600B1D78891B>I<F001C0F007E018
1FF07FC0943801FF00EF07FCEF1FF0EF7FC04C48C7FCEE0FFCEE3FF0EEFFC0030390C8FC
ED0FF8ED3FE0EDFF80DA03FEC9FCEC1FF8EC7FE0903801FF80D907FECAFCEB1FF0EB7FC0
4848CBFCEA07FCEA1FF0EA7FC048CCFCA2EA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0
EB07FE903801FF809038007FE0EC1FF8EC03FE913800FF80ED3FE0ED0FF8ED03FF030013
C0EE3FF0EE0FFCEE01FF9338007FC0EF1FF0EF07FCEF01FF9438007FC0F01FE01807F001
C03B3878B44C>I<127012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FE
903801FF809038007FE0EC1FF8EC03FE913800FF80ED3FE0ED0FF8ED03FF030013C0EE3F
F0EE0FFCEE01FF9338007FC0EF1FF0EF07FCEF01FF9438007FC0F01FE0A2F07FC0943801
FF00EF07FCEF1FF0EF7FC04C48C7FCEE0FFCEE3FF0EEFFC0030390C8FCED0FF8ED3FE0ED
FF80DA03FEC9FCEC1FF8EC7FE0903801FF80D907FECAFCEB1FF0EB7FC04848CBFCEA07FC
EA1FF0EA7FC048CCFC12FC12703B3878B44C>62 D<4CB46C1318043F01F013384BB512FC
0307D9007E1378DB1FF090380F80F0DB7F80EB03C1DA01FEC7EA01C34A48EC00E7DA0FF0
ED7FE04A48153F4A5A02FFC9121F494817C04948160F495A130F4A178049481607495A13
7F4948170091CAFC5A485A1906485AA2485A96C7FC121F5BA2123F5BA3127F5BA4485AA4
19C0A2180161127F180396C7FC6018066C6C160E601818001F17386D5E000F5F6D4B5A6C
6C4B5A00034CC8FC6C6C150E6C6C153C017F5DD93FC0EB01E0D91FF0EB0FC0D907FE017F
C9FC0101B512FCD9003F13E0020790CAFC45487CC546>67 D<91B6D8E003B61280A30200
01E0C70003EB8000DB7F806E48C7FC03FF1503A293C85BA219075C4B5EA2190F14034B5E
A2191F14074B5EA2193F140F4B5EA2197F141F4B5EA219FF143F92B8C8FCA3DA7FC0C712
014B5DA2180314FF92C85BA218075B4A5EA2180F13034A5EA2181F13074A5EA2183F130F
4A5EA2187F131F4A5EA2013F16FFA24A93C9FCD9FFE002037FB6D8E003B67EA351447CC3
51>72 D<91B500C0020FB5128082A2DA007F9239007FE00070ED1F8074C7FCDBEFF8150E
15CF03C7160C70151C1401DB83FE1518A2DB81FF1538140303001630831A704A6D7E0206
1760163F7114E0140E020C6D6C5CA2706C1301141C021801075D83190302386D7E023094
C8FC1601715B147002606DEB8006A294387FC00E14E04A023F130C18E0191C0101ED1FF0
4A1618170FF0F838130391C83807FC30A2943803FE705B01060301136018FF19E0010E81
010C5F187FA2131C0118705A1338181F137801FC70C9FCEA03FFB512F884180651447CC3
4E>78 D<91B712FEF0FFE019F802009039C0000FFE6F48EB01FF03FF9138007F80F13FC0
93C8EA1FE0A24AEE0FF0A25D1AF81403A25DA21407F11FF05DA2020FEE3FE0A24B16C019
7F021F1780F1FF004B4A5A4E5A023F4B5A4E5A4BEC3FC006FFC7FC027FEC07FC92B612F0
18800380CAFC14FFA292CBFCA25BA25CA21303A25CA21307A25CA2130FA25CA2131FA25C
A2133FA25CEBFFE0B612E0A345447CC33F>80 D<EE03FF047F13F0923901FC01FC92390F
E0007FDB3F80EB1FC003FEC76C7EDA01F8EC03F0DA07F0814A486E7EDA1F806E7E027FC9
FC02FE167F495A4948EE3F801307494817C04A161F495A013F18E0495AA249CAFC485A1A
F012035B12075B120F5B001F19E0193F5B123FA34848EF7FC0A31A8019FF485A1A0060A2
4E5AA2614E5AA2007F4D5AA24E5A4E5A61003F021F147F6DD9FFC049C7FC913A01E0E001
FE001F90260380705B913A07003003F8260FE00690383807F00007010E9038180FE0D9F0
0CEC1F80D803F84BC8FC0001011CEB1CFE2600FC18EB1DF8017EEC1FF0D93F9C14C0D90F
EC017FC9FC902703FE03FC14600100B5FC91260FFE1C14E091C7001E5C1801A24E5A043F
1307180FDD803FC7FC71B4FCEFFFFE705BA26060705B60040390C8FCEE00FC44597CC54D
>I<48BA12C05AA291C7D980001380D807F092C7121F4949150F0180170748C75B190312
0E48020316005E12181238003014074C5C00701806126000E0140F485DA3C8001F92C7FC
5EA3153F5EA3157F5EA315FF93CAFCA35C5DA314035DA314075DA3140F5DA3141F5DA314
3F5DA2147FA214FF01037F001FB612FCA25E42447EC339>84 D<B66C91381FFFFCA21AF8
000101E0C8000313806C49923801FC004A16F06D6C5E4E5A616D6C4BC7FC180E606D6C15
18606E5D010F5E4D5A6D6C14034DC8FC17066D6C5C5F5F6D6C5C17E04C5A6D01805B4CC9
FCEDC006027F5B5EEDE038023F5B16606E6C5AEDF18003F3CAFCEC0FFEA25D6E5A5D140F
A35D141FA35D143FA35D147FA392CBFC5CA3495AA3EB07FF0007B6FCA25D46447CC339>
89 D<ED03C0ED0FF0ED3E38ED7818EDF81CEDF00CEC01E0140315C01407EC0F80161C91
381F0018A2143E16384A1330A214FC4A13700101146016E04A13C0010313011680903807
E00316005D010F1306ECC00E5D1518011F13384A5A156015E090383F81C04A5A4AC7FC14
06EB7F0EEB7E1C5C5C5CEB7FC05C91C8FC13FEA25BA35B12011203EA0778120E121CEA38
7C127000E01560D8003CEB01E0ED0380ED07006D130E153C6D137090380783E0903803FF
80D900FCC7FC26477FC529>96 D<EC0FC0EC7FF0903901F8381C903907E01C7E90380FC0
0E90393F0007FE496D5A13FE485A49130100035D485A120F491303001F5DA2485A150700
7F5D5BA2150F00FF5D90C7FCA2151F5E5AA2033F1330EE00701760A24B13E017C015FE00
7E130102031301003ED9073E1380003F010E13036C011C14006C6C486C5A3A07C0F00F0E
3A01FFC007FC3A007F0001F02C2D7CAB33>I<EB0FE0EA07FFA338001FC0130F131FA25C
A3133F91C8FCA35B137EA313FE5BA312015BEC0FC0EC3FF00003EBF07C9038F3C03E9038
F7001F01FE14804848130F4914C05B16E0485A5BA3121F5BA2151F123F90C7FCA2153F48
15C0127EA2157F16805A16005DA24A5A007C5CA24A5A4A5A5D003C130F003E495A001E49
5A001F017EC7FC6C5B3807C1F03801FFC06C6CC8FC23467CC429>I<EC07F8EC3FFF9138
FC07C0903903F000E049481370D91F80133049C71270017EEB03F801FE1307485A4848EB
0FF012075B000FEC07C0484890C7FCA2485AA2127F5BA312FF90C9FCA45AA51618163816
70007E15E0ED01C06CEC0380ED07006C6C131E000F14383907C001F03903F00FC02600FF
FEC7FCEB1FF0252D7CAB2A>I<EC07F8EC3FFE903901FC0780903903F003C090390FC001
E090381F8000017FC7FC01FE1470485A484814F0000715E05B000F1401484814C0150348
48EB0780ED1F0015FC007FEB1FF090B5128002F0C7FC0180C8FC12FF90C9FCA55AA41618
007E15381670007F15E06CEC01C0ED03806CEC07006C6C131E6D13383907E001F03901F0
0FC026007FFEC7FCEB1FF0252D7CAB2D>101 D<14FE137FA3EB01FC13001301A25CA213
03A25CA21307A25CA2130FA25CA2131FA25CED3FC090393F81FFF0913887C0FC91380E00
7E023C133ED97F70133F4A7F4A14805C13FF91C7FC5BA24848143F17005BA200035D167E
5BA2000715FE5E5B1501000F5DA24913035E001F1607030713064914E0150F003FEDC00E
170C90C7141CEE80184816381730007E167017E000FE91380781C0EEC38048913801FF00
0038EC007C30467BC438>104 D<D903E0EB3F80D90FF8EBFFE0903A1C7C03C0F8903A38
3E07007C9026703F1E137E9026601F387F5D01E00160EB1F8001C013E04A5A00014A14C0
018090C7FCA200035B1300147EC7FC02FE143FA25CA20101157F18805CA2010315FF1800
5C5F010714015F4A13035F010F14075F4C5A5F496C495A4CC7FC02B8137E02985B90393F
9C01F891388F07E0913803FF80DA00FCC8FC4990C9FCA2137EA213FEA25BA21201A25BA2
1203A21207B512F0A25C323F83AB31>112 D<141C147EA314FE5CA313015CA313035CA3
13075CA2007FB512FCB6FC15F839000FC000A2131F5CA3133F91C7FCA35B137EA313FE5B
A312015BA312035BA21570000714605B15E015C0000F130101C013801403EC0700000713
06140E5C6C6C5A000113F03800FFC0013FC7FC1E3F7EBD23>116
D<133ED9FF8014E02603C3C0EB03F0380703E0380601F0000E1507121CD818035D123800
30150FA2D870075D00605B161FEAE00F00C0495CEA001F4A133FA2013F92C7FC91C7FC5E
5B017E147EA216FE13FE495CA20301EB01801703484802F81300A25F0303130616F00000
1407030F130E6D010D130C017C011D131C033913186D9038F0F838903A1F03C07870903A
07FF803FE0903A01FC000F80312D7DAB38>I<133ED9FF8014E02603C3C0EB03F0380703
E0380601F0000E1507001C16E0EA180312380030150F007016C0EA60075C161FD8E00F15
8000C05BEA001F4A133F1700133F91C7FC5E49147E137EA216FE01FE5C5BA215015E485A
A215035EA200001407150F6D5C017C131F153F6D13FF90391F03CFC0903807FF8F903801
FC0F90C7121F5EA2153F93C7FCD807C05BD81FE0137E5DA24848485A4A5A01805B393800
07C00018495A001C49C8FC6C137C380781F83803FFE0C66CC9FC2C407DAB30>121
D E
%EndDVIPSBitmapFont
/Fi 54[66 112[72 2[72 66 55 72 78 1[78 72 94 66 2[39
78 78 1[66 72 72 1[72 10[50 54[{TeXBase1Encoding ReEncodeFont}19
99.6264 /Times-Bold rf /Fj 6[50 15[44 44 7[44 22[61 52[44
44 24[44 50 50 1[50 50 28 39 33 50 50 50 50 78 28 1[28
28 50 50 33 44 50 44 50 44 3[33 1[33 6[61 55 1[72 55
72 72 89 2[39 4[61 72 66 3[44 3[28 28 50 1[50 50 50 50
50 50 50 50 1[25 33 25 2[33 33 33 36[55 2[{
TeXBase1Encoding ReEncodeFont}63 99.6264 /Times-Roman
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 2989 700 a Fj(Jean-Marie)25 b(Dufour)3242 820
y(Jan)l(vier)g(2002)2708 940 y(Compil\351)f(:)h(19)f(jan)l(vier)h(2002)
1246 1189 y Fi(TH\311ORIE)g(\311CONOM\311TRIQ)o(UE)1622
1310 y(EXERCICES)h(6)875 1473 y(G\311N\311RALIT\311S)g(SUR)f(LA)h
(TH\311ORIE)f(DES)g(TESTS)270 1756 y Fj(1.)49 b(Expliquez)24
b(les)g(distinctions)f(sui)n(v)n(antes)f(:)449 1934 y(\(a\))49
b(test)25 b(de)g(signi\002cation)e(et)i(test)f(de)h(sp\351ci\002cation)
17 b(;)444 2082 y(\(b\))48 b(hypoth\350se)24 b(simple)f(et)i
(hypoth\350se)f(composite)15 b(;)449 2231 y(\(c\))49
b(probl\350me)25 b(de)g(test)f(identi\002able)g(et)h(probl\350me)f(de)h
(test)f(non)h(identi\002able)16 b(;)444 2380 y(\(d\))48
b(erreur)26 b(de)f(premi\350re)g(esp\350ce)h(et)e(erreur)i(de)f
(seconde)g(esp\350ce.)270 2557 y(2.)49 b(On)25 b(suppose)e(qu'une)i(v)n
(ariable)f Fh(Y)1588 2572 y Fg(t)1642 2557 y Fj(suit)g(une)h
(\351quation)f(de)h(la)g(forme)1344 2777 y Fh(Y)1401
2792 y Fg(t)1458 2777 y Ff(=)j Fh(ae)1658 2736 y Fg(bt)1740
2777 y Ff(+)22 b Fh(c)g Ff(+)g Fh(u)2056 2792 y Fg(t)2102
2777 y Fh(;)116 b(t)28 b Ff(=)g(1)p Fh(;)33 b(:)17 b(:)g(:)33
b(;)g(T)394 2997 y Fj(o\371)k Fh(a;)17 b(b;)g(c)37 b
Fj(sont)g(des)g(param\350tres)g(inconnus)f(et)h Fh(u)2200
3012 y Fe(1)2239 2997 y Fh(;)17 b(:::;)g(u)2464 3012
y Fg(T)2556 2997 y Fj(sont)36 b(des)i(v)n(araiables)e(al\351atoires)394
3118 y Fd(i.i.d.)24 b Fh(N)j Ff(\(0)p Fh(;)17 b(\033)893
3081 y Fe(2)933 3118 y Ff(\))f Fh(:)449 3295 y Fj(\(a\))49
b(Ce)26 b(mod\350le)e(est-il)g(identi\002able)16 b(?)25
b(Pourquoi)16 b(?)444 3444 y(\(b\))48 b(D\351cidez)26
b(lesquelles)e(des)g(hypoth\350ses)f(sui)n(v)n(antes)g(sont)h
(identi\002ables)g(:)690 3621 y(i.)48 b Fh(a)28 b Ff(=)f(0)33
b Fj(;)662 3770 y(ii.)48 b Fh(b)28 b Ff(=)g(0)33 b Fj(;)634
3919 y(iii.)48 b Fh(c)28 b Ff(=)f(0)33 b Fj(;)649 4067
y(i)n(v)-6 b(.)47 b Fh(a)28 b Ff(=)f Fh(b)h Ff(=)g(0)33
b Fj(;)674 4216 y(v)-6 b(.)48 b Fh(b)28 b Ff(=)g Fh(c)f
Ff(=)h(0)16 b Fj(.)449 4393 y(\(a\))49 b(Quand)25 b(un)g(test)f(est-il)
g Fd(pr\351f\351r)o(able)f Fj(\340)j(un)e(autre)h(test)16
b(?)444 4542 y(\(b\))48 b(Montrez)25 b(qu'il)f(n'e)o(xiste)g(pas)h(de)g
(test)f Fd(optimal)p Fj(,)f(sauf)i(dans)f(des)h(cas)g
(d\351g\351n\351r\351s.)270 4719 y(3.)49 b(On)25 b(consid\350re)f(un)h
(jet)f(d'une)h(pi\350ce)g(de)g(monnaie)f(et)h(on)f(note)h(:)1413
4994 y Fh(Y)49 b Ff(=)1622 4854 y Fc(\032)1739 4933 y
Ff(1)p Fj(,)24 b(si)h(\223pile\224)f(est)h(observ\351)1739
5054 y Ff(0)p Fj(,)f(si)h(\223f)o(ace\224)h(est)e(observ\351)2694
4994 y Fh(:)394 5280 y Fj(On)j(d\351\002nit)g Fh(P)j
Ff([)p Fh(Y)49 b Ff(=)28 b(1])k(=)g(1)c Fj(et)f(on)g(s'int\351resse)g
(\340)h(l'hypoth\350se)d(nulle)i Fh(H)2993 5295 y Fe(0)3065
5280 y Ff(:)32 b Fh(p)h Fb(\025)3325 5240 y Fe(1)p 3325
5257 36 4 v 3325 5314 a(2)3371 5280 y Fj(.)27 b(T)m(rouv)o(ez)394
5400 y(tous)d(les)g(tests)g(admissibles)f(de)i Fh(H)1612
5415 y Fe(0)1652 5400 y Fj(.)f(D\351cri)n(v)o(ez)h(un)f(test)h(non)f
(admissible.)p eop
%%Page: 2 2
2 1 bop 270 700 a Fj(4.)49 b(Expliquez)36 b(la)i(dif)n(f\351rence)g
(entre)f(le)h(principe)f(bayesien)g(et)g(le)g(principe)g(de)h(Ne)o
(yman)e(pour)394 820 y(s\351lectionner)24 b(un)h(test.)449
1012 y(\(a\))49 b(Expliquez)20 b(ce)h(qu'est)f(le)g Fd(dia)o(gr)o(amme)
f(de)h(risques)f Fj(pour)h(un)g(test)g(entre)h(deux)f(hypoth\350ses)608
1133 y(simples.)444 1289 y(\(b\))48 b(Qu'est-ce)26 b(qu'un)e
Fd(test)g(de)h(Ne)m(yman)17 b Fj(?)270 1481 y(5.)49 b(\311noncez)25
b(et)g(d\351montrez)f(le)h Fd(th\351or\350me)g(de)f(Ne)m(yman-P)-8
b(ear)o(son)p Fj(.)270 1637 y(6.)49 b(Consid\351rez)25
b(le)g(mod\350le)f(param\351trique)h Ff(\()o Fh(\007)s(;)17
b Ff(\()p Fh(P)2075 1652 y Fg(\022)2114 1637 y Ff(;)33
b Fh(\022)e Fb(2)d Fh(\002)s Ff(\))o(\))d Fj(o\371)f
Fh(\002)k Fj(est)c(un)h(interv)n(alle)e(dans)i Fa(R)5
b Fh(:)449 1829 y Fj(\(a\))49 b(Quand)25 b(la)g(f)o(amille)f
Ff(\()p Fh(P)1403 1844 y Fg(\022)1442 1829 y Ff(;)33
b Fh(\022)e Fb(2)d Fh(\002)s Ff(\))c Fj(est-elle)h(\340)g(rapport)g(de)
g(densit\351s)e(monotone)16 b(?)444 1985 y(\(b\))48 b(Dans)23
b(le)f(cas)h(o\371)f(la)g(f)o(amille)g Ff(\()p Fh(P)1701
2000 y Fg(\022)1740 1985 y Ff(;)17 b Fh(\022)30 b Fb(2)e
Fh(\002)s Ff(\))22 b Fj(est)g(\340)h(rapport)f(de)g(densit\351s)g
(croissant,)f(donnez)608 2106 y(un)31 b(test)f(uniform\351ment)f(plus)h
(puissant)g(au)h(seuil)f Fh(\013)h Fj(pour)g(tester)f
Fh(H)3036 2121 y Fe(0)3114 2106 y Ff(:)39 b Fh(\022)j
Fb(\024)d Fh(\022)3431 2121 y Fe(0)3501 2106 y Fj(contre)608
2226 y Fh(H)689 2241 y Fe(1)756 2226 y Ff(:)28 b Fh(\022)j(>)d(\022)
1039 2241 y Fe(0)1095 2226 y Fh(:)270 2418 y Fj(7.)49
b(Consid\351rez)25 b(un)g(mod\350le)f(e)o(xponentiel)f
(uniparam\351trique)h(dont)g(les)g(densit\351s)g(sont)1300
2638 y Fh(`)17 b Ff(\()p Fh(y)t Ff(;)32 b Fh(\022)s Ff(\))c(=)f
Fh(C)d Ff(\()p Fh(\022)s Ff(\))17 b Fh(h)g Ff(\()o Fh(y)t
Ff(\))f(exp)i([)p Fh(Q)f Ff(\()p Fh(\022)s Ff(\))f Fh(T)31
b Ff(\()p Fh(y)t Ff(\))o(])394 2858 y Fj(o\371)24 b Fh(Q)17
b Ff(\()p Fh(\022)s Ff(\))25 b Fj(est)g(une)g(fonction)f(strictement)f
(croissante)h(de)h Fh(\022)31 b Fb(2)d Fa(R)5 b Fh(:)449
3050 y Fj(\(a\))49 b(T)m(rouv)o(ez)26 b(un)g(test)g(uniform\351ment)f
(plus)h(puissant)f(au)i(seuil)e Fh(\013)j Fj(pour)e(tester)g
Fh(H)3347 3065 y Fe(0)3417 3050 y Ff(:)31 b Fh(\022)j
Fb(\024)d Fh(\022)3711 3065 y Fe(0)608 3171 y Fj(contre)25
b Fh(H)963 3186 y Fe(1)1030 3171 y Ff(:)j Fh(\022)j(>)c(\022)1313
3186 y Fe(0)1369 3171 y Fh(:)444 3327 y Fj(\(b\))48 b(T)m(rouv)o(ez)33
b(un)g(test)g(localement)g(plus)f(puissant)g(au)i(seuil)e
Fh(\013)j Fj(pour)e(tester)g Fh(H)3296 3342 y Fe(0)3379
3327 y Ff(:)44 b Fh(\022)i Fb(\024)e Fh(\022)3711 3342
y Fe(0)608 3447 y Fj(contre)29 b Fh(H)967 3462 y Fe(1)1040
3447 y Ff(:)35 b Fh(\022)i(>)d(\022)1342 3462 y Fe(0)1398
3447 y Fh(:)29 b Fj([Si)f(une)h(condition)d(de)j(dif)n
(f\351rentiabilit\351)d(est)j(requise,)f(pr\351cisez)608
3568 y(cette)d(derni\350re.])449 3724 y(\(c\))49 b(Donnez)28
b(un)f(test)g(uniform\351ment)f(plus)g(puissant)h(au)g(seuil)g
Fh(\013)h Fj(pour)f(tester)g Fh(H)3340 3739 y Fe(0)3412
3724 y Ff(:)33 b Fh(\022)i Fb(\024)e Fh(\022)3711 3739
y Fe(1)608 3844 y Fj(ou)25 b Fh(\022)31 b Fb(\025)d Fh(\022)962
3859 y Fe(2)1027 3844 y Fj(contre)c Fh(H)1381 3859 y
Fe(1)1448 3844 y Ff(:)k Fh(\022)1551 3859 y Fe(1)1618
3844 y Fh(<)g(\022)j(<)c(\022)1949 3859 y Fe(2)2001 3844
y Fj(,)e(o\371)f Fh(\022)2223 3859 y Fe(1)2290 3844 y
Fh(<)k(\022)2442 3859 y Fe(2)2498 3844 y Fh(:)1925 5700
y Fj(2)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
