%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: m:\Tt\Dufour_1998_C_AdvEtx_Exercices7_TestingUnbiasedInvariant_F.dvi
%%CreationDate: Sat Jan 19 13:50:45 2002
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Times-Roman Times-Bold
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: M:\TEX\texmf\miktex\bin\dvips.exe -O -0in,0.5in
%+ m:\Tt\Dufour_1998_C_AdvEtx_Exercices7_TestingUnbiasedInvariant_F
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.01.19:1350
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600
(m:\Tt\Dufour_1998_C_AdvEtx_Exercices7_TestingUnbiasedInvariant_F.dvi)
@start
%DVIPSBitmapFont: Fa cmr8 8 1
/Fa 1 49 df<EB3FC0EBFFF03803E07C48487E48487E497E001EEB0780A2003E14C0A248
EB03E0A500FC14F0B0007C14E0A3007E1307003E14C0A36CEB0F806C14006D5A3807C03E
3803F0FC3800FFF0EB3FC01C2D7DAB23>48 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmsy10 12 2
/Fb 2 51 df<037FB612E00207B712F0143F91B812E0010301C0C9FCD907FCCAFCEB0FE0
EB3F8049CBFC13FC485A485A485A5B485A121F90CCFC123EA2123C127CA2127812F8A25A
A87EA21278127CA2123C123EA27E7F120F6C7E7F6C7E6C7E6C7E137E6D7EEB1FE0EB07FC
6DB47E010090B712E0023F16F01407020016E092CAFCB0001FB912E04818F0A26C18E03C
4E78BE4D>18 D<92B6FC02071580143F91B7120001030180C8FCD907FCC9FCEB1FE0EB3F
80017ECAFC5B485A485A485A5B485A121F90CBFC123EA2123C127CA2127812F8A25AA2B9
FC1880A2180000F0CBFCA27EA21278127CA2123C123EA27E7F120F6C7E7F6C7E6C7E6C7E
137E6D7EEB1FE0EB07FC6DB47E010090B6FC023F1580140702001500313A78B542>50
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmmi8 8 1
/Fc 1 19 df<147C49B4FC903803C78090380783C090381F03E0EB1E01133E017C13F013
F8A2EA01F0120313E01207A2EA0FC01403A2EA1F80A21407003F14E0130090B5FCA2397F
000FC0127EA2141F1580127C00FC14005CA2147EA248137C14FC00785B495AA2387C03E0
383C07C0495A001C90C7FCEA1E3EEA0FF8EA03E01C307DAE21>18
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmr12 12 3
/Fd 3 59 df<140C141C1438147014E0EB01C01303EB0780EB0F00A2131E5BA25B13F85B
12015B1203A2485AA3485AA348C7FCA35AA2123EA2127EA4127CA312FCB3A2127CA3127E
A4123EA2123FA27EA36C7EA36C7EA36C7EA212017F12007F13787FA27F7FA2EB0780EB03
C01301EB00E014701438141C140C166476CA26>40 D<12C07E12707E7E7E120F6C7E6C7E
A26C7E6C7EA21378137C133C133E131E131FA2EB0F80A3EB07C0A3EB03E0A314F0A21301
A214F8A41300A314FCB3A214F8A31301A414F0A21303A214E0A3EB07C0A3EB0F80A3EB1F
00A2131E133E133C137C13785BA2485A485AA2485A48C7FC120E5A5A5A5A5A16647BCA26
>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB3A5121EEA7F80A2EAFFC0A4EA7F80
A2EA1E000A2B78AA1B>58 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmmi12 12 11
/Fe 11 122 df<EE03FF047F13F0923901FC01FC92390FE0007FDB3F80EB1FC003FEC76C
7EDA01F8EC03F0DA07F0814A486E7EDA1F806E7E027FC9FC02FE167F495A4948EE3F8013
07494817C04A161F495A013F18E0495AA249CAFC485A1AF012035B12075B120F5B001F01
30031813E00270ED383FD9E07FB612F0123FA291B7FC48489338E07FC0A301C1188002C0
C8EAC0FF38FF81800180CA130060A24E5AA2614E5AA2007F4D5AA24E5A4E5A61003F177F
6D4CC7FC4D5A001F5F4D5A6C6C4B5A00074C5A6DED1F806C6C4BC8FC000116FE6C6CEC01
F8017EEC07F06D6CEB1FC0D90FE0017FC9FC903903F803FC0100B512E0DA0FFECAFC4448
7CC54B>2 D<D90FF0ED0FE0D93FFEED7FF890B54A487E486E01077F486E497F486E5B48
6E491480261FC03F91387FC03F9026000FF89038FF000F003C0103D901FC130700384B48
1303486D6C485A006001004A1301484B5A4C5A037C90C7FC48033E1500C893C7FC5EA25E
A2ED7DF0A2ED7FE0A25EA35EA215FF93CAFCA45C5DA314035DA314075DA3140F5DA3141F
5DA3143F5DA3147F5DA214FFA25B5B000FB612E0A341467DC539>7
D<EC03FCEC1FFF9138FE07C0903903F001F049486C7ED91FC06D130E4948137C49C76C13
0C01FE143F4848161C48486E131800071680491638000F173048481670EFC060485A18E0
040F13C0484815C1188017C300FFEEC70090C813C617CE17DCEE1FD84816F85F5F5FA500
7E153F167F6C03EF1338ED03CF6C6CD90F0713306C6C011C14706C6C9039F803E0E03C01
F00FE001E1C026007FFFC7EAFF80D91FF0EC3E00372D7CAB3E>11
D<157E913801FF80913807C3E091381F01F0EC3E004A13F814FC4948137C495A5C010714
7E495A131F5C133F49C7127FA213FEA212015B12034914FF1207A25B000F15FE1501A248
5AA21503003F15FC5B90B6FCA24815F89038800007A2150F00FF15F090C7FCA2ED1FE0A2
5AED3FC0A21680157F16005A15FEA24A5AA25D14035D4A5A007C495AA24A5A007E49C7FC
003E133E5C001E5B6C485A380783C06CB4C8FCEA00FC28477CC52D>18
D<177F0130913803FFC00170020F13E0494A13F048484A13F84848EC7F0190C838F8007C
484A48133C00064A48131C000E4B131E000C4A48130E001C92C7FC0018140E150C003802
1C1406003014185D180E00704A140C1260154003C0141C00E017184A5A4817386C17304A
C8127018E01260007049EC01C0EF03800078010614070038EE0F00003C010E141E6C167C
D81F805D6C6C48EB03F0D807F0EC0FE0D803FEEC3FC02801FFFC03FFC7FC6C6CB55A6D14
F8010F14E0010114809026007FF8C8FC02F8C9FCA25CA21301A3495AA31307A25C130FA4
131F5C6DCAFC37417BAB40>39 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A78891B
>58 D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312011380120313
005A1206120E5A5A5A12600B1D78891B>I<91B912FCA3020001C0C7123F6F48EC03F803
FF1501190093C91278A21A385C5DA3020317305DA314074B1460A218E0020F4B13005DA2
1701021F5D4B13031707170F023F027FC8FC92B6FCA391397FC0007E4B131EA2170E02FF
140C92C7FCA2171C49031813035C611906010392C7FC4A160E190C191C010717184A1638
19301970130F4A5E180161011F16034A15074E5A013F163F4EC7FC4AEC03FF01FFED3FFE
B9FCA26046447CC348>69 D<91B6D8E003B61280A3020001E0C70003EB8000DB7F806E48
C7FC03FF1503A293C85BA219075C4B5EA2190F14034B5EA2191F14074B5EA2193F140F4B
5EA2197F141F4B5EA219FF143F92B8C8FCA3DA7FC0C712014B5DA2180314FF92C85BA218
075B4A5EA2180F13034A5EA2181F13074A5EA2183F130F4A5EA2187F131F4A5EA2013F16
FFA24A93C9FCD9FFE002037FB6D8E003B67EA351447CC351>72 D<91B712FEF0FFE019F8
02009039C0000FFE6F48EB01FF03FF9138007F80F13FC093C8EA1FE0A24AEE0FF0A25D1A
F81403A25DA21407F11FF05DA2020FEE3FE0A24B16C0197F021F1780F1FF004B4A5A4E5A
023F4B5A4E5A4BEC3FC006FFC7FC027FEC07FC92B612F018800380CAFC14FFA292CBFCA2
5BA25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA25CEBFFE0B612E0A345
447CC33F>80 D<133ED9FF8014E02603C3C0EB03F0380703E0380601F0000E1507001C16
E0EA180312380030150F007016C0EA60075C161FD8E00F158000C05BEA001F4A133F1700
133F91C7FC5E49147E137EA216FE01FE5C5BA215015E485AA215035EA200001407150F6D
5C017C131F153F6D13FF90391F03CFC0903807FF8F903801FC0F90C7121F5EA2153F93C7
FCD807C05BD81FE0137E5DA24848485A4A5A01805B39380007C00018495A001C49C8FC6C
137C380781F83803FFE0C66CC9FC2C407DAB30>121 D E
%EndDVIPSBitmapFont
/Ff 54[66 112[72 1[72 72 66 55 72 78 1[78 72 94 3[39
78 2[66 1[72 66 72 9[50 55[{TeXBase1Encoding ReEncodeFont}18
99.6264 /Times-Bold rf /Fg 6[50 15[44 44 109[44 50 2[50
50 28 39 33 50 50 50 50 78 28 2[28 50 1[33 44 50 44 50
44 13[55 4[72 89 2[39 5[72 66 7[28 28 50 5[50 50 50 50
1[25 33 25 2[33 33 33 36[55 2[{TeXBase1Encoding ReEncodeFont}44
99.6264 /Times-Roman rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 2989 700 a Fg(Jean-Marie)25 b(Dufour)3242 820
y(Jan)l(vier)g(2002)2665 940 y(Compil\351:)30 b(January)24
b(19,)h(2002)1246 1268 y Ff(TH\311ORIE)g(\311CONOM\311TRIQ)o(UE)1622
1389 y(EXERCICES)h(7)939 1559 y(TESTS)h(SANS)f(BIAIS)f(ET)h(TESTS)h
(INV)-13 b(ARIANTS)270 1908 y Fg(1.)49 b(D\351\002nissez)25
b(les)f(notions)g(sui)n(v)n(antes:)449 2136 y(\(a\))49
b(test)25 b(sans)f(biais;)444 2298 y(\(b\))48 b(test)25
b Fe(\013)p Fg(-semblable;)449 2460 y(\(c\))49 b(test)25
b(ayant)f(une)h Fe(\013)q Fg(-structure)g(de)g(Ne)o(yman.)270
2688 y(2.)49 b(D\351montrez)22 b(qu'un)g(test)g(uniform\351ment)g(plus)
f(puissant)h(au)g(seuil)g Fe(\013)i Fg(est)e(n\351cessairement)g(sans)
394 2808 y(biais.)270 3012 y(3.)49 b(Soit)30 b Fd(\()p
Fe(\007)s(;)j Fd(\()p Fe(P)844 3027 y Fc(\022)910 3012
y Fd(:)28 b Fe(\022)j Fb(2)d Fe(\002)s Fd(\))o(\))i Fg(un)g(mod\350le)g
(param\351trique.)47 b(Si)30 b Fe(')17 b Fd(\()p Fe(y)t
Fd(\))29 b Fg(est)h(un)g(test)g(de)h(l'hypoth\350se)394
3132 y Fe(H)475 3147 y Fa(0)544 3132 y Fd(:)f Fe(\022)j
Fb(2)e Fe(\002)851 3147 y Fa(0)906 3132 y Fg(,)c(o\371)f
Fe(\002)1159 3147 y Fa(0)1228 3132 y Fb(\022)k Fe(\002)s
Fg(,)c(et)g(si)f Fe(E)1726 3147 y Fc(\022)1766 3132 y
Fe(')16 b Fd(\()p Fe(y)t Fd(\))25 b Fg(est)h(une)g(fonction)f(continue)
h(de)g Fe(\022)s Fg(,)h(montrez)e(que)394 3253 y(si)30
b Fe(')h Fg(est)g(un)f(test)g(sans)h(biais)f(au)h(ni)n(v)o(eau)f
Fe(\013;)h Fg(le)g(test)f Fe(')h Fg(est)g Fe(\013)p Fg(-semblable)g
(sur)f(la)h(fronti\350re)g(de)394 3373 y Fe(\002)469
3388 y Fa(0)508 3373 y Fe(:)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
